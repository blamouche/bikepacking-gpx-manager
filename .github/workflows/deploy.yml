name: Deploy via FTP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Deploy with zero downtime
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          FTP_PORT: ${{ secrets.FTP_PORT }}
          FTP_PASSIVE: ${{ secrets.FTP_PASSIVE }}
        run: |
          set -euo pipefail
          SERVER_DIR="apps/cyclingcompanion"
          STAGING_DIR="${SERVER_DIR}_next"
          BACKUP_DIR="${SERVER_DIR}_prev"
          LOCAL_DIR="."

          PORT_ARG=""
          if [[ -n "${FTP_PORT:-}" ]]; then
            PORT_ARG=":${FTP_PORT}"
          fi

          cat <<'EOF' > deploy.lftp
          set ftp:ssl-force false
          set ftp:ssl-allow yes
          set ssl:verify-certificate false
          set cmd:fail-exit true
          set net:max-retries 2
          set net:timeout 20
          EOF

          if [[ -n "${FTP_PASSIVE:-}" ]]; then
            printf 'set ftp:passive-mode %s\n' "${FTP_PASSIVE}" >> deploy.lftp
          fi

          {
            printf 'open -u %s,%s %s\n' "${FTP_USERNAME}" "${FTP_PASSWORD}" "${FTP_SERVER}${PORT_ARG}"
            printf 'mkdir -p %s\n' "${STAGING_DIR}"
            printf 'mirror -R --delete --only-newer --parallel=4 --verbose %s %s ' "${LOCAL_DIR}" "${STAGING_DIR}"
            printf '--exclude-glob .git/ --exclude-glob .git/** '
            printf '--exclude-glob .github/ --exclude-glob .github/** '
            printf '--exclude-glob node_modules/ --exclude-glob node_modules/** '
            printf '--exclude-glob .DS_Store --exclude-glob README.md --exclude-glob deploy.lftp\n'
            printf 'rm -rf %s\n' "${BACKUP_DIR}"
            printf 'set cmd:fail-exit false\n'
            printf 'mv %s %s\n' "${SERVER_DIR}" "${BACKUP_DIR}"
            printf 'set cmd:fail-exit true\n'
            printf 'mv %s %s\n' "${STAGING_DIR}" "${SERVER_DIR}"
            printf 'bye\n'
          } >> deploy.lftp

          lftp -f deploy.lftp
          rm -f deploy.lftp
